import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id("org.springframework.boot") version "2.7.4"
    id("io.spring.dependency-management") version "1.0.14.RELEASE"
    id("org.jetbrains.kotlin.jvm") version "1.7.20"
    id("org.jetbrains.kotlin.plugin.spring") version "1.7.20"
    id("org.jetbrains.kotlin.plugin.jpa") version "1.7.20"
}

group = "pl.komjago"
version = "0.0.1-SNAPSHOT"
java.sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    maven { url = uri("https://repo.spring.io/release") }
    mavenCentral()
}

sourceSets {
    unitTest {
        test.kotlin.srcDir file("src/test/unit/kotlin")
        compileClasspath += test.output + main.output
        runtimeClasspath += output + compileClasspath
    }
    integrationTest {
        test.kotlin.srcDir file("src/test/integration/kotlin")
        compileClasspath += test.output + main.output
        runtimeClasspath += output + compileClasspath
    }
    e2eTest {
        test.kotlin.srcDir file("src/test/e2e/kotlin")
        compileClasspath += test.output + main.output
        runtimeClasspath += output + compileClasspath
    }
    utils {
        test.kotlin.srcDir file("src/test/utils/kotlin")
        compileClasspath += test.output + main.output
        runtimeClasspath += output + compileClasspath
    }
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.liquibase:liquibase-core:4.17.0")
    implementation("org.apache.commons:commons-text:1.10.0")
    implementation("org.springdoc:springdoc-openapi-ui:1.6.12")
    implementation("org.springdoc:springdoc-openapi-kotlin:1.6.12")
    implementation("org.springdoc:springdoc-openapi-data-rest:1.6.12")
    runtimeOnly("com.h2database:h2")
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("io.mockk:mockk:1.13.2")
    testImplementation("com.natpryce:hamkrest:1.8.0.1")
    testImplementation("com.ninja-squad:springmockk:3.1.1")
}

tasks.withType(Test) {
    useJUnitPlatform()
}

tasks.register("integrationTest", Test) {
    description = "Runs integration tests."
    group = "verification"

    testClassesDirs = sourceSets["integrationTest"].output.classesDirs
    classpath = sourceSets["integrationTest"].runtimeClasspath + sourceSets["integrationTest"].output
    shouldRunAfter("test")
}

tasks.register("e2eTest", Test) {
    description = "Runs end to end tests."
    group = "verification"

    testClassesDirs = sourceSets["e2eTest"].output.classesDirs
    classpath = sourceSets["e2eTest"].runtimeClasspath
    shouldRunAfter("integrationTest")
    onlyIf { project.hasProperty("slowTest") }
}

tasks.check { dependsOn(integrationTest, e2eTest) }